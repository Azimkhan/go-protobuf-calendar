// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calendar.proto

package calendar_service

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CalendarEvent_EventType int32

const (
	CalendarEvent_TASK    CalendarEvent_EventType = 0
	CalendarEvent_MEETING CalendarEvent_EventType = 1
)

var CalendarEvent_EventType_name = map[int32]string{
	0: "TASK",
	1: "MEETING",
}

var CalendarEvent_EventType_value = map[string]int32{
	"TASK":    0,
	"MEETING": 1,
}

func (x CalendarEvent_EventType) String() string {
	return proto.EnumName(CalendarEvent_EventType_name, int32(x))
}

func (CalendarEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0, 0}
}

type CalendarEvent struct {
	Id                   int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type                 CalendarEvent_EventType `protobuf:"varint,3,opt,name=type,proto3,enum=calendar_service.CalendarEvent_EventType" json:"type,omitempty"`
	Created              *timestamp.Timestamp    `protobuf:"bytes,4,opt,name=created,proto3" json:"created,omitempty"`
	Updated              *timestamp.Timestamp    `protobuf:"bytes,5,opt,name=updated,proto3" json:"updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CalendarEvent) Reset()         { *m = CalendarEvent{} }
func (m *CalendarEvent) String() string { return proto.CompactTextString(m) }
func (*CalendarEvent) ProtoMessage()    {}
func (*CalendarEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_e3d25d49f056cdb2, []int{0}
}

func (m *CalendarEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CalendarEvent.Unmarshal(m, b)
}
func (m *CalendarEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CalendarEvent.Marshal(b, m, deterministic)
}
func (m *CalendarEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CalendarEvent.Merge(m, src)
}
func (m *CalendarEvent) XXX_Size() int {
	return xxx_messageInfo_CalendarEvent.Size(m)
}
func (m *CalendarEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CalendarEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CalendarEvent proto.InternalMessageInfo

func (m *CalendarEvent) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CalendarEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CalendarEvent) GetType() CalendarEvent_EventType {
	if m != nil {
		return m.Type
	}
	return CalendarEvent_TASK
}

func (m *CalendarEvent) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *CalendarEvent) GetUpdated() *timestamp.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func init() {
	proto.RegisterEnum("calendar_service.CalendarEvent_EventType", CalendarEvent_EventType_name, CalendarEvent_EventType_value)
	proto.RegisterType((*CalendarEvent)(nil), "calendar_service.CalendarEvent")
}

func init() { proto.RegisterFile("calendar.proto", fileDescriptor_e3d25d49f056cdb2) }

var fileDescriptor_e3d25d49f056cdb2 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4b, 0x4e, 0xcc, 0x49,
	0xcd, 0x4b, 0x49, 0x2c, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x80, 0xf1, 0xe3, 0x8b,
	0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0xa5, 0xe4, 0xd3, 0xf3, 0xf3, 0xd3, 0x73, 0x52, 0xf5, 0xc1,
	0xf2, 0x49, 0xa5, 0x69, 0xfa, 0x25, 0x99, 0xb9, 0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05, 0x10, 0x2d,
	0x4a, 0x4d, 0x4c, 0x5c, 0xbc, 0xce, 0x50, 0x5d, 0xae, 0x65, 0xa9, 0x79, 0x25, 0x42, 0x7c, 0x5c,
	0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x4c, 0x99, 0x29, 0x42, 0x42, 0x5c,
	0x2c, 0x79, 0x89, 0xb9, 0xa9, 0x12, 0x4c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x90, 0x2d,
	0x17, 0x4b, 0x49, 0x65, 0x41, 0xaa, 0x04, 0xb3, 0x02, 0xa3, 0x06, 0x9f, 0x91, 0xa6, 0x1e, 0xba,
	0xbd, 0x7a, 0x28, 0x46, 0xea, 0x81, 0xc9, 0x90, 0xca, 0x82, 0xd4, 0x20, 0xb0, 0x36, 0x21, 0x13,
	0x2e, 0xf6, 0xe4, 0xa2, 0xd4, 0xc4, 0x92, 0xd4, 0x14, 0x09, 0x16, 0x05, 0x46, 0x0d, 0x6e, 0x23,
	0x29, 0x3d, 0x88, 0x3b, 0xf5, 0x60, 0xee, 0xd4, 0x0b, 0x81, 0xb9, 0x33, 0x08, 0xa6, 0x14, 0xa4,
	0xab, 0xb4, 0x20, 0x05, 0xac, 0x8b, 0x95, 0xb0, 0x2e, 0xa8, 0x52, 0x25, 0x25, 0x2e, 0x4e, 0xb8,
	0xf5, 0x42, 0x1c, 0x5c, 0x2c, 0x21, 0x8e, 0xc1, 0xde, 0x02, 0x0c, 0x42, 0xdc, 0x5c, 0xec, 0xbe,
	0xae, 0xae, 0x21, 0x9e, 0x7e, 0xee, 0x02, 0x8c, 0x49, 0x6c, 0x60, 0x03, 0x8c, 0x01, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x1f, 0x7d, 0xa5, 0x83, 0x50, 0x01, 0x00, 0x00,
}
